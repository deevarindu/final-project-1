basePath: /
definitions:
  models.Todo:
    properties:
      id:
        example: "1"
        type: string
      status:
        example: done
        type: string
      title:
        example: do final project
        type: string
    type: object
  params.TodoCreateRequest:
    properties:
      status:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  params.TodoUpdateRequest:
    properties:
      status:
        type: string
      title:
        type: string
    type: object
host: localhost:5000
info:
  contact:
    email: deevarindu@gmail.com
    name: Deeva Rindu
  description: This is the simple documentation for the Final Project 1 Todos API.
  termsOfService: http://swagger.io/terms/
  title: Final Project 1 Todos API Documentation
  version: "1.0"
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: Get all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.Todo'
              type: array
            type: array
      summary: Get all todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create new todo
      parameters:
      - description: Create Todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/params.TodoCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Create new todo
      tags:
      - todos
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete todo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Delete todo
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: Get todo by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Get todo by id
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update todo
      parameters:
      - description: Update Todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/params.TodoUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Update todo
      tags:
      - todos
swagger: "2.0"
